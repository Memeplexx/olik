"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[948],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,g=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(g,s(s({ref:t},u),{},{components:n})):r.createElement(g,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3683:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_label:"Reading state"},l="Reading state",c={unversionedId:"reading_state/index",id:"reading_state/index",title:"Reading state",description:"Olik supports synchonous reads and the ability to listen for updates to a node",source:"@site/docs/3_reading_state/index.md",sourceDirName:"3_reading_state",slug:"/reading_state/",permalink:"/Olik/docs/reading_state/",tags:[],version:"current",frontMatter:{sidebar_label:"Reading state"},sidebar:"defaultSidebar",previous:{title:"Writing state",permalink:"/Olik/docs/writing_state"},next:{title:"React",permalink:"/Olik/docs/reading_state/react"}},u=[{value:"Olik supports synchonous reads and the ability to listen for updates to a node",id:"olik-supports-synchonous-reads-and-the-ability-to-listen-for-updates-to-a-node",children:[],level:4},{value:"Reading synchronously",id:"reading-synchronously",children:[],level:3},{value:"<strong>Listening</strong> to state changes",id:"listening-to-state-changes",children:[],level:3},{value:"<strong>Framework-specific</strong> APIs:",id:"framework-specific-apis",children:[],level:3}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reading-state"},"Reading state"),(0,o.kt)("h4",{id:"olik-supports-synchonous-reads-and-the-ability-to-listen-for-updates-to-a-node"},"Olik supports synchonous reads and the ability to listen for updates to a node"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"reading-synchronously"},"Reading synchronously"),(0,o.kt)("p",null,"To read state associated with a node, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," property.",(0,o.kt)("br",{parentName:"p"}),"\n","The following statements are equivalent to each other:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const todos = store.todos.state;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const todos = store.state.todos;\n")),(0,o.kt)("h3",{id:"listening-to-state-changes"},(0,o.kt)("strong",{parentName:"h3"},"Listening")," to state changes"),(0,o.kt)("p",null,"You can receive events when a selected node is updated as follows.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("em",{parentName:"p"},"(Remember to ",(0,o.kt)("strong",{parentName:"em"},"always")," unsubscribe to avoid a memory leak).")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const sub = store.user\n  .onChange(u => console.log(u));\nsub.unsubscribe();\n")),(0,o.kt)("h3",{id:"framework-specific-apis"},(0,o.kt)("strong",{parentName:"h3"},"Framework-specific")," APIs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"react"},(0,o.kt)("strong",{parentName:"a"},"React"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"angular"},(0,o.kt)("strong",{parentName:"a"},"Angular")))))}d.isMDXComponent=!0}}]);