"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[998],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8021:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_label:"Angular",sidebar_position:2},l="Reading state with Angular",p={unversionedId:"reading_state/angular",id:"reading_state/angular",title:"Reading state with Angular",description:"Olik-NG contains functions to read state and memoise expensive derivations",source:"@site/docs/3_reading_state/angular.md",sourceDirName:"3_reading_state",slug:"/reading_state/angular",permalink:"/Olik/docs/reading_state/angular",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Angular",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"React",permalink:"/Olik/docs/reading_state/react"},next:{title:"Async state",permalink:"/Olik/docs/async_state/"}},c=[{value:"Olik-NG contains functions to read state and memoise expensive derivations",id:"olik-ng-contains-functions-to-read-state-and-memoise-expensive-derivations",children:[],level:4},{value:"Observing state",id:"observing-state",children:[],level:3},{value:"Deriving computationally expensive state",id:"deriving-computationally-expensive-state",children:[],level:3},{value:"Consuming observables more easily",id:"consuming-observables-more-easily",children:[],level:3}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"reading-state-with-angular"},"Reading state with Angular"),(0,a.kt)("h4",{id:"olik-ng-contains-functions-to-read-state-and-memoise-expensive-derivations"},"Olik-NG contains functions to read state and memoise expensive derivations"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\ud83e\udd5a Let's begin with the following store:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore } from 'olik'\n\nconst store = createStore({\n  name: document.title,\n  state: {\n    todos: new Array<{ id: number, title: string, done: boolean }>(),\n    showDone: false,\n  }\n});\n")),(0,a.kt)("h3",{id:"observing-state"},"Observing state"),(0,a.kt)("p",null,"You can observe a selected node of your state tree using the ",(0,a.kt)("inlineCode",{parentName:"p"},"observe()")," function"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div *ngFor="let todo of todos$ | async">\n  {{todo.title}}\n</div>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({...})\nexport class MyComponent {\n  todos$ = store.todos\n    .observe();\n}\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/olik-ng-read-iwyd3?file=/src/app/app.component.ts"},(0,a.kt)("strong",{parentName:"a"},"Demo \ud83e\udd5a"))),(0,a.kt)("h3",{id:"deriving-computationally-expensive-state"},"Deriving computationally expensive state"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"derive()")," function allows you to derive computationally expensive state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { derive } from 'olik'\n\n@Component({...})\nexport class MyComponent {\n  completedTodos$ = derive(store.todos, store.showDone)\n    .with((todos, showDone) => todos.filter(todo => todo.done === showDone))\n    .observe()\n}\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/olik-ng-memoise-supgo?file=/src/app/app.component.ts"},(0,a.kt)("strong",{parentName:"a"},"Demo \ud83e\udd5a"))),(0,a.kt)("h3",{id:"consuming-observables-more-easily"},"Consuming observables more easily"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"combineComponentObservables()")," is a ",(0,a.kt)("em",{parentName:"p"},"convenience")," function that:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Removes the need to declare an ",(0,a.kt)("inlineCode",{parentName:"li"},"async")," pipe for ",(0,a.kt)("em",{parentName:"li"},"every")," observable in your template. This can make writing conditional logic way less verbose."),(0,a.kt)("li",{parentName:"ul"},"Allows you to read your component observables, synchronously, without subscribing to them.  "),(0,a.kt)("li",{parentName:"ul"},"Allows you to read your component observable values from within the ",(0,a.kt)("a",{parentName:"li",href:"https://angular.io/guide/devtools"},(0,a.kt)("strong",{parentName:"a"},"Angular Devtools extension")),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:"{1}","{1}":!0},'<ng-container *ngIf="obs$ | async; let obs;">\n  <div>Todos for user: {{obs.username$}}</div>\n  <div *ngFor="let todo of obs.todos$"> {{todo.title}} </div>\n</ng-container>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8,11}","{8,11}":!0},"import { combineComponentObservables } from 'olik-ng';\n\n@Component({...})\nexport class AppComponent {\n\n  username$ = store.username.observe()\n  todos$ = store.todos.observe()\n  obs$ = combineComponentObservables<AppComponent>(this)\n\n  ngAfterViewInit() {\n    console.log({ todos: this.obs$.todos$ }) // synchronous read\n  }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/olik-ng-combinecomponentobservables-trh42?file=/src/app/app.component.ts"},(0,a.kt)("strong",{parentName:"a"},"Demo \ud83e\udd5a"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note that the ",(0,a.kt)("inlineCode",{parentName:"p"},"obs$")," variable:"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"must ",(0,a.kt)("strong",{parentName:"li"},"not")," be renamed."),(0,a.kt)("li",{parentName:"ul"},"must be the ",(0,a.kt)("strong",{parentName:"li"},"last")," observable variable you declare."))))}m.isMDXComponent=!0}}]);