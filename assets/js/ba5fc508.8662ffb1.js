"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[999],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(g,s(s({ref:t},u),{},{components:n})):a.createElement(g,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9809:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),s=["components"],i={sidebar_label:"Intro & Motivation",sidebar_position:0},l="Intro & Motivation",c={unversionedId:"motivation",id:"motivation",title:"Intro & Motivation",description:"Ever since the advent of Redux, many libraries have rushed in to address its ergonomic shortcomings by co-locating state, actions, and state update logic:",source:"@site/docs/0_motivation.mdx",sourceDirName:".",slug:"/motivation",permalink:"/olik/docs/motivation",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_label:"Intro & Motivation",sidebar_position:0},sidebar:"defaultSidebar",next:{title:"Getting started",permalink:"/olik/docs/getting_started"}},u=[],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"intro--motivation"},"Intro & Motivation"),(0,r.kt)("p",null,"Ever since the advent of Redux, many libraries have rushed in to address its ergonomic shortcomings by co-locating state, actions, and state update logic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// Redux Toolkit\nexport const todosSlice = createSlice({\n  name: "todos",\n  initialState:[],\n  reducers:{\n    addTask: (state, action) => {/* state update logic */},\n    deleteTask: (state, action) => {/* state update logic */},\n  }\n});\n\n// Recoil\nfunction Todo() {\n  const [todoList, setTodoList] = useRecoilState([]);\n  const addTask = (todo: Todo) => {/* state update logic */};\n  const deleteTask = (id: number) => {/* state update logic */};\n}\n\n// Zustand\nconst useStore = create(set => ({\n  state: [],\n  addTask: () => {/* state update logic */},\n  deleteTask: () => {/* state update logic */},\n}))\n')),(0,r.kt)("p",null,"This pattern is great, but it can be improved upon:  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Within each state update function, we find ourselves repeating similar, but not identical, CRUD logic over and over."),(0,r.kt)("li",{parentName:"ul"},"There is an unnecessary layer of abstraction between components and managed state where a function name may contradict its implementation."),(0,r.kt)("li",{parentName:"ul"},"This extra layer of abstraction discourages us from moving component state into the store where it can be more easily tracked.")),(0,r.kt)("p",null,"So how does Olik address these issues? Let's just jump right\xa0in\u2026"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install olik\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore } from 'olik';\n\nconst store = createStore({\n  name: document.title,\n  state: {\n    user: { name: '', age: 0 },\n    todos: new Array<{\n      id: number; title: string; status: 'todo' | 'done'; urgency: number;\n    }>()\n  },\n});\n")),(0,r.kt)("p",null,"Now, for some interactions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.user.age.$replace(28);\n// { type: 'user.age.replace()', payload: 28 }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.todos.$insertOne(todo);\n// { type: 'todos.insertOne()', payload: { ... } }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.todos.$find.id.$eq(3).$replace(todo);\n// { type: 'todos.find.id.eq(3.replace()', payload: { ... } }}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.todos.$filter.urgency.$lt(2).$remove();\n// { type: 'todos.filter.urgency.lt(2).remove()' }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"store.todos.$find.status.$eq(5).status.$replace('done');\n// { type: 'todos.find.status.eq(5).status.$replace()', payload: 'done' }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Read state\nconst todos = store.todos.$state;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'// Listen to state changes to the user\'s name\nconst subscription = store.user.name\n  .$onChange(name => console.log(`name is now "${name}"`))\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Listen to changes to 'pending' todos\nstore.todos.$filter.status.$eq('pending')\n  .$onChange(todos => console.log(todos));\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Make an asynchronous update\nstore.todos\n  .$replace(() => fetch('https://api.dev/todos').then(r => r.json()));\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Observe state in React (need to install additional dependency: olik-react)\nstore.todos.$find.id.$eq(3).useState();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Observe state in Angular (need to install additional dependency: olik-ng)\nstore.todos.$find.id.$eq(3).observe();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Observe state in Svelte (need to install additional dependency: olik-svelte)\nconst todos = $store.todos.$find.id.$eq(3);\n")),(0,r.kt)("p",null,"Olik is the first state manager to use a completely fluent API. "),(0,r.kt)("p",null,"By chaining together a standard set composable state search and update primitives, we can make surgically precise updates to our immutable state tree with zero ambiguity, in complete type-safety, to any depth, right from our components.  "),(0,r.kt)("p",null,"The fluent API allows the library to describe our actions for us with perfect accuracy from within the Devtools extension.  "),(0,r.kt)("p",null,"Nested stores are also supported which help us manage and debug component state with or without application state.  "),(0,r.kt)("p",null,"If you have all features enabled, this library weighs in at 5kb, however it will arguably have the least effect on your application bundle size because it doesn't require any infrastructural code, immutable updaters, or immutable update helpers (like Immer).  "),(0,r.kt)("p",null,"Finally, Olik is not built with any particular framework in mind. So far, it can be used without a framework, with React, Angular, or Svelte."))}p.isMDXComponent=!0}}]);