"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[694],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=a,f=g["".concat(i,".").concat(d)]||g[d]||p[d]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=g;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8896:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return u},default:function(){return g}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={layout:"default",title:"Angular",nav_order:2,has_children:!1,permalink:"/docs/async-state/angular",parent:"Async state"},i='<img src="../../assets/images/angular_large.png" width="40" class="ng-icon"/> Fetching state with Angular',c={unversionedId:"async_state/angular",id:"async_state/angular",title:"Angular",description:"\ud83e\udd5a Let's begin with the following store and service:",source:"@site/docs/5_async_state/angular.md",sourceDirName:"5_async_state",slug:"/async_state/angular",permalink:"/Olik/docs/async_state/angular",tags:[],version:"current",frontMatter:{layout:"default",title:"Angular",nav_order:2,has_children:!1,permalink:"/docs/async-state/angular",parent:"Async state"},sidebar:"defaultSidebar",previous:{title:"Async state",permalink:"/Olik/docs/async_state/"},next:{title:"React",permalink:"/Olik/docs/async_state/react"}},u=[{value:"<strong>Tracking</strong> the status of <strong>async data fetches</strong>",id:"tracking-the-status-of-async-data-fetches",children:[],level:2},{value:"<strong>Resolving data</strong> in a route resolver",id:"resolving-data-in-a-route-resolver",children:[],level:2}],p={toc:u};function g(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-fetching-state-with-angular"},(0,o.kt)("img",{src:"../../assets/images/angular_large.png",width:"40",class:"ng-icon"})," Fetching state with Angular"),(0,o.kt)("p",null,"\ud83e\udd5a Let's begin with the following store and service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore } from 'olik-ng'\n\nconst get = createStore({\n  name: document.title,\n  state: {\n    todos: new Array<{ id: number, title: string }>(),\n  },\n})\n")),(0,o.kt)("h2",{id:"tracking-the-status-of-async-data-fetches"},(0,o.kt)("strong",{parentName:"h2"},"Tracking")," the status of ",(0,o.kt)("strong",{parentName:"h2"},"async data fetches")),(0,o.kt)("p",null,"You can track the status of a request by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"asObservableFuture()")," function"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ng-container *ngIf="todos$ | async; let todos;">\n  <div *ngIf="todos.isLoading">\n    Fetching todos...\n  </div>\n  <div *ngIf="todos.wasRejected">\n    Failed to fetch todos with error {{todos.error}}\n  </div>\n  <ul *ngIf="todos.wasResolved">\n    <li *ngFor="let todo of todos.storeValue">\n      {{todo.title}}\n    </li>\n  </ul>\n</ng-container>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{8}","{8}":!0},"@Component({...})\nclass MyComponent {\n\n  constructor(private httpClient: HttpClient) { }\n\n  todos$ = get.todos\n    .replaceAll(this.httpClient.get('http://example.com/todos'))\n    .asObservableFuture();\n  );\n}\n")),(0,o.kt)("a",{href:"https://codesandbox.io/s/olik-ng-async-5y3hd?file=/src/app/app.component.ts",target:"_blank"},"Demo ",(0,o.kt)("img",{src:"../assets/images/code_sandbox_blue.png"})),(0,o.kt)("h2",{id:"resolving-data-in-a-route-resolver"},(0,o.kt)("strong",{parentName:"h2"},"Resolving data")," in a route resolver"),(0,o.kt)("p",null,"It may be better to pre-fetch all component data using an ",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/router/Resolve"},"Angular route resolver"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9}","{9}":!0},"@Injectable()\nexport class MyRouteResolver implements Resolve<Observable<any>> {\n\n  constructor(private httpClient: HttpClient) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return get.todos\n      .replaceAll(this.httpClient.get('http://example.com/todos'))\n      .asObservable();\n  }\n}\n")),(0,o.kt)("a",{href:"https://codesandbox.io/s/olik-ng-route-resolver-6mmbk?file=/src/app/child.resolver.ts",target:"_blank"},"Demo ",(0,o.kt)("img",{src:"../assets/images/code_sandbox_blue.png"})))}g.isMDXComponent=!0}}]);